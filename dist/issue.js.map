{"version":3,"sources":["../server/issue.js"],"names":["validIssueStatus","New","Open","Assigned","Fixed","Verified","Closed","issueFieldType","status","owner","effort","created","completionDate","title","cleanupIssue","issue","cleanedUpIssue","Object","keys","forEach","field","validateIssue","errors","push","length","join"],"mappings":";;;;;;AAAA,IAAMA,gBAAgB,GAAG;AACvBC,EAAAA,GAAG,EAAE,IADkB;AAEvBC,EAAAA,IAAI,EAAE,IAFiB;AAGvBC,EAAAA,QAAQ,EAAE,IAHa;AAIvBC,EAAAA,KAAK,EAAE,IAJgB;AAKvBC,EAAAA,QAAQ,EAAE,IALa;AAMvBC,EAAAA,MAAM,EAAE;AANe,CAAzB;AASA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,UADa;AAErBC,EAAAA,KAAK,EAAE,UAFc;AAGrBC,EAAAA,MAAM,EAAE,UAHa;AAIrBC,EAAAA,OAAO,EAAE,UAJY;AAKrBC,EAAAA,cAAc,EAAE,UALK;AAMrBC,EAAAA,KAAK,EAAE;AANc,CAAvB;;AASA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAMC,cAAc,GAAG,EAAvB;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,OAAnB,CAA2B,UAACC,KAAD,EAAW;AACpC,QAAIb,cAAc,CAACa,KAAD,CAAlB,EAA2B;AACzBJ,MAAAA,cAAc,CAACI,KAAD,CAAd,GAAwBL,KAAK,CAACK,KAAD,CAA7B;AACD;AACF,GAJD;AAMA,SAAOJ,cAAP;AACD;;AAED,SAASK,aAAT,CAAuBN,KAAvB,EAA8B;AAC5B,MAAMO,MAAM,GAAG,EAAf;AACAL,EAAAA,MAAM,CAACC,IAAP,CAAYX,cAAZ,EAA4BY,OAA5B,CAAoC,UAACC,KAAD,EAAW;AAC7C,QAAIb,cAAc,CAACa,KAAD,CAAd,KAA0B,UAA1B,IAAwC,CAACL,KAAK,CAACK,KAAD,CAAlD,EAA2D;AACzDE,MAAAA,MAAM,CAACC,IAAP,oCAAwCH,KAAxC;AACD;AACF,GAJD;;AAMA,MAAI,CAACpB,gBAAgB,CAACe,KAAK,CAACP,MAAP,CAArB,EAAqC;AACnCc,IAAAA,MAAM,CAACC,IAAP,WAAeR,KAAK,CAACP,MAArB;AACD;;AAED,SAAQc,MAAM,CAACE,MAAP,GAAgBF,MAAM,CAACG,IAAP,CAAY,GAAZ,CAAhB,GAAmC,IAA3C;AACD;;eAEc;AACbX,EAAAA,YAAY,EAAZA,YADa;AAEbO,EAAAA,aAAa,EAAbA;AAFa,C","sourcesContent":["const validIssueStatus = {\r\n  New: true,\r\n  Open: true,\r\n  Assigned: true,\r\n  Fixed: true,\r\n  Verified: true,\r\n  Closed: true,\r\n};\r\n\r\nconst issueFieldType = {\r\n  status: 'required',\r\n  owner: 'required',\r\n  effort: 'optional',\r\n  created: 'required',\r\n  completionDate: 'optional',\r\n  title: 'required',\r\n};\r\n\r\nfunction cleanupIssue(issue) {\r\n  const cleanedUpIssue = {};\r\n  Object.keys(issue).forEach((field) => {\r\n    if (issueFieldType[field]) {\r\n      cleanedUpIssue[field] = issue[field];\r\n    }\r\n  });\r\n\r\n  return cleanedUpIssue;\r\n}\r\n\r\nfunction validateIssue(issue) {\r\n  const errors = [];\r\n  Object.keys(issueFieldType).forEach((field) => {\r\n    if (issueFieldType[field] === 'required' && !issue[field]) {\r\n      errors.push(`Missing Mandatory field: ${field}`);\r\n    }\r\n  });\r\n\r\n  if (!validIssueStatus[issue.status]) {\r\n    errors.push(`${issue.status} is not a valid status`);\r\n  }\r\n\r\n  return (errors.length ? errors.join(';') : null);\r\n}\r\n\r\nexport default {\r\n  cleanupIssue,\r\n  validateIssue,\r\n};\r\n"],"file":"issue.js"}